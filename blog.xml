<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
  <channel>
    <title>Tiago Oliveira Weber</title>
    <link>//tiagoweber.github.io/</link>
    <description>Cool RSS</description>    <item> 
      <title>Integrate your Circuit Design Flow and Reports: Demonstration of Ngspice and OCTAVE/Matlab Interaction within Emacs</title>
      <link>http://tiagoweber.github.io/blog/entry4.html</link>
      <guid>http://example.com/item/123</guid>
      <pubDate>Sat, 4 Aug 2016</pubDate>   
      <description>[CDATA[ 


**  Integrate your Circuit Design Flow and Reports: Demonstration of Ngspice and Octave/Matlab Interaction within Emacs

by Tiago Oliveira Weber 2016-08-04 Thu


Can you imagine being able to explore new design ideas, perform calculations, run circuit simulations, calculate some more based on the results and generate reports, all in the same place? Well, you can stop imagining and start developing your next electric/electronic project on Emacs. 

Recently, I've made a ob-spice, which is a simple language extension to ob-babel to be able to simulate Ngspice within Emacs. In the present post I will show how we can use ob-spice to perform interaction between Ngspice, Octave (or Matlab) and any other language of our interest. While the experienced org-mode user would already assume this interaction possible from ob-babel features, it is the first demonstration of ob-spice receiving vector inputs (a new feature to ob-spice) and producing outputs back to other languages.

In our example we will design a simple opamp inverting topology. For that purpose, we will calculate the resistor values in Octave/Matlab, pass the values to Ngspice and measure the results so they can be used back in Octave/Matlab to calculate the error between the ideal response and the simulated one. The error will be due to the opamp characteristics and limitations (for th]]</description>
	</item>    <item> 
      <title>Design Automation Conferece (DAC) Video About Moving EDA Tools to Open Source</title>
      <link>http://tiagoweber.github.io/blog/entry3.html</link>
      <guid>http://example.com/item/123</guid>
      <pubDate>Wen, 6 Jul 2016</pubDate>   
      <description>[CDATA[ 


**  Design Automation Conferece (DAC) Video About Moving EDA Tools to Open Source
by Tiago Oliveira Weber 2016-07-06 Wen

The DAC TV channel with the title "Lanza’s Tech Vision Challenge: Daring to Move to Open Source". The moderator was Lucio Lanza (from Lanza TechVentures) and the panelists were Warran Savage (from IP Extreme), Mark Templeton (from Scientific Ventures) and Michael Wishart (from eFabless).

In my opinion all participants were very rational on their statements although having different points of view. I, as an open source advocate, felt very glad this type of discussion is taking place in such a relevant conference and with people that know from the inside out how the current EDA business works.
]]</description>
	</item>    <item> 
      <title>Software/Hardware Integration Lab</title>
      <link>http://tiagoweber.github.io/blog/entry2.html</link>
      <guid>http://example.com/item/123</guid>
      <pubDate>Mon, 27 Jun 2016</pubDate>   
      <description>[CDATA[ 


**  Software/Hardware Integration Lab
by Tiago Oliveira Weber 2016-06-27 Mon

I am now a member of the *Software/Hardware Integration Lab* (LISHA) at the Federal University of Santa Catarina. According to the official site:

The Software/Hardware Integration Lab (LISHA) was founded in 1985 to promote research in the frontiers between hardware and software. Since then, it has dedicated considerable efforts to research in areas such as computer architecture, operating systems, computer networks and the related applications. Currently, the laboratory focuses on innovative techniques and tools to support the development of embedded systems.

My webpage at LISHA is https://lisha.ufsc.br/Weber and the announcement (in portuguese) of the start of LISHA at UFSC Araranguá is here.
]]</description>
	</item>    <item> 
      <title>Simulating Circuits with Emacs, Org-mode, Babel and Ngspice</title>
      <link>http://tiagoweber.github.io/blog/entry1.html</link>
      <guid>http://example.com/item/123</guid>
      <pubDate>Sat, 26 Jun 2016</pubDate>   
      <description>[CDATA[ 




**  Simulating Circuits with Emacs, Org-mode, Babel and Ngspice

by Tiago Oliveira Weber 2016-06-26 Sun




Picture this. You are creating a report, studying or preparing a class. While you write your text, you suddenly feel that it is time to show in a circuit how your project works. Now the adventure begins: to add the results of a given simulation to your document, you will have to open your simulation software in another window, describe the circuit using a schematic editor, simulate it and then copy and paste the results to your text file. You might as well copy the image of some waveforms. Additionaly, you will also have to describe the circuit elements in such a way that the reader of your report knows what you have simulated. 

In this process a lot can be lost: the quality of your schematic screenshots may or may not be a delight to the eyes, but even if the quality is great, there is still a lot of information that is not accessible through an image of the schematic. These can be the various component properties, simulation parameters and component models. In top of that, if you are like me, you will probably spend a lot of time editing and working with the waveforms to make them fit well in the report. And this is usually made either with an image editor (such as Gimp or Inkscape) or with gnuplot (if you're performing the additional step of exporting the data out of the simulator). After you are done]]</description>
	</item>
  </channel>
</rss>